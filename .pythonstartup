import scipy as sp
import numpy as np
import pandas as pd
import pandas_datareader as pdr
import matplotlib.pyplot as plt

import importlib

import rh
import api
import util
import util.debug
import slurp
import events
import stocks
import models
import account
import constants

from util.numbers import D, Z

def relmod():
    importlib.reload(rh)
    importlib.reload(api)
    importlib.reload(account)
    importlib.reload(stocks)
    importlib.reload(slurp)
    importlib.reload(models)
    importlib.reload(events)
    importlib.reload(util)
    importlib.reload(util.debug)
    importlib.reload(util.color)
    importlib.reload(util.output)

rh.preinitialize()

A = account.Account()

S = A._stocks
T = A._transactions

print("Account Objects & DataFrames")
print(" + A                      (Account Object)")
print(" + S                      (Stocks DataFrame)")
print(" + T                      (Transactions DataFrame)")
print()
print("On-Demand Ticker-Multiplexor Object")
print(" + api.<ticker>.iex       (IEXFinanceEndpoint Stock API object)")
print(" + api.<ticker>.yf        (YahooFinance Stock API object)")
print()
print("API Connection Objects")
print(" + api.rh                 (RobinStocks (Robinhood) API)")
print(" + api.iex                (IEXCloud API)")
print(" + api.fd                 (AlphaVantage FundamentalData API)")
print(" + api.yec                (YahooEarningsCalendar API)")
print(" + api.fh                 (Finnhub API)")
print(" + api.yf                 (YahooFinance API)")
print()
print("Meta-helpers for this REPL")
print(" + relmod()               (Reload wthout having to exit the repl)")
print(" + datatypes(df)          (Schema check on Pandas DataFrame (specifically for S and T))")

datatypes = lambda df=S: {
    column: set(map(type, df[column])) for column in df.columns
}
